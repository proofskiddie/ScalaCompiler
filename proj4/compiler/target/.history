ls
run "2+2"
console
sbt
reload
console
reload
console
clear
test
console
clear
console
run "var x = 2; x"
console
run "2 + 2"
console
run "2 + 2"
run "3 * ( 2 + 3 * 2 + 3 * ( 3 + 2 ))"
run "var x = 14; x = 4"
console
testOnly PrimitiveTest.scala
run "def foo(n : int) = n; foo(2)"
console
run "def foo(n : int) = n; foo(2)"
run "def foo(n : Int) = n; foo(2)"
run "def foo(n : Int) = n; 1"
run "while(1 == 1) { val n = 5; n }; 1"
run "while(1 == 1) { val n = 5; () }; 1"
run "while(1 == 1) {()};"
run "while(1 == 1) {()};9"
run "var i = 0; while (i < 5) {putchar(i); i = i + 1}"
run "var i = 0; while (i < 5) {putchar(i); i = i + 1};"
run "var i = 0; while (i < 5) {putchar(i); i = i + 1}; 1"
run "var i = 0; while (i < 5) {putchar(i); i = i + 1}; 0"
run "var i = 0; 0"
run "var i = 0; while () {}; 0"
run "var i = 0; while () {i = i + 1}; 0"
run "var i = 0; while (i != 9) {i = i + 1}; 0"
run "while(true) { 1 }; 1"
run "while(true) { () }; 1"
run "while(false) { () }; 1"
run "if(true) 1 else 3"
run "def foo(n : Int) = n; foo(2)"
run "def foo(n : Int) = n; while (1 < 0) { val x = 12; foo(x) }; foo(4)"
run "def foo(n : Int) = n; while (1 < 0) { val x = 12;  }; foo(4)"
run "def foo(n : Int) = n; while (1 < 0) { val x = 12; () }; foo(4)"
run "def foo(n : Int) = n; while (1 < 0) { val x = 12; x = x + 1 }; foo(4)"
run "def foo(n : Int) = n; while (1 < 0) { var x = 12; x = x + 1 }; foo(4)"
ls
run "../examples/pascal.scala"
run "../examples/pow.scala"
run "../library/miniscala.lib ../examples/pascal.scala"
run "def foo(n : Int) = n; while (1 < 0) { var x = 12; x = x + 1 }; foo(4)"
test
console
clear
test
run "../library/miniscala.lib ../examples/pascal.scala"
run ../library/miniscala.lib ../examples/pascal.scala
run "putchar('a')
run "putchar('a')"
run "putchar(2)"
run ../library/miniscala.lib ../examples/pascal.scala
last compile:run
run ../library/miniscala.lib ../examples/pascal.scala
test
run ../library/miniscala.lib ../examples/pascal.scala
test
run ../library/miniscala.lib ../examples/pascal.scala
test
run ../library/miniscala.lib ../examples/pascal.scala
clean
test
clean
